@startuml



interface Statistics {
~getTitle(): String
~setTitle(String)
~populateData()
~createFactory(): StatisticsRegionFactory
}



class PieChartStatistics {
-Timestamp: startDate
-Timestamp: endDate
-ObservableList<Expense>: expenses
-String: title
-List<String>: formattedCategories
-List<Double>: formattedPercentages
-List<Category>: budgetCategories

+List<String>: getFormattedCategories()
+List<Double>: getFormattedPercentages()
-generatePercentages(List<List<Expense>>, List<Double>, List<Integer>, List<String>,String)
-extractRelevantExpenses(Timestamp,Timestamp)
-List<Category> collateBudgetCategories(ObservableList<Expense>)
}




class TrendStatistics {
-Timestamp: startDate
-Timestamp: endDate
-Budget: primaryBudget
-boolean: isBudgetLimitMode
-ObservableList<Expense>: expenses
-List<Timestamp>: dates
-List<Double>: periodicTotalExpenditures
-List<Double>: periodicBudgetLimits
-List<List<Double>>: periodicCategoricalExpenses
-String: title

-getCategorisedPeriodicExpenses(Timestamp, Timestamp): List<List<Expense>>
-getExpenditureForCategory(List<Expense>): double
-getTotalExpenditure(List<List<Expense>>): double
-getCategoricalExpenditure(List<List<Expense>>): List<Double>
+getPeriodicCategoricalExpenses(): List<List<Double>>
+getDates(): List<Timestamp>
-getPeriodicTotalExpenditure(): List<Double>
}

class TabularStatistics {
-Timestamp: firstStartDate
-Timestamp: firstEndDate
-Timestamp: secondStartDate
-Timestamp: secondEndDate
-int: numOfCategories
-ObservableList<Expense>: expenses
-List<FiveElementTableEntry>: unionDifferenceTable
-String: title
-createEmptyTableWithoutPercentage(): List<ThreeElementTableEntry>
-secondMinusFirst(List<ThreeElementTableEntry>, List<ThreeElementTableEntry>): List<ThreeElementTableEntry>
-extractRelevantExpenses(Timestamp, Timestamp): List<List<Expense>>
-convertDataToFigures(List<List<Expense>>, List<ThreeElementTableEntry>)
}


Statistics <|-- PieChartStatistics
Statistics <|-- TabularStatistics
Statistics <|-- TrendStatistics

@enduml



