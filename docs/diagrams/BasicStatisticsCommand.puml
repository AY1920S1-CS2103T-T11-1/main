@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":StatsCommandParser" as StatsCommandParser LOGIC_COLOR
participant ":StatsCommand" as StatsCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR

end box


box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
participant "statistics: Statistics" as Statistics MODEL_COLOR
end box



[-> LogicManager : execute("stats sd/01-10-2019 ed/01-11-2019")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("stats \n sd/01-10-2019 \n ed/01-11-2019")
activate AddressBookParser


create StatsCommandParser


AddressBookParser -> StatsCommandParser : parse("stats \n sd/01-10-2019 \n ed/01-11-2019)
activate StatsCommandParser

StatsCommandParser --> AddressBookParser
deactivate StatsCommandParser

AddressBookParser -> StatsCommandParser : parse("stats \n sd/01-10-2019 \n ed/01-11-2019)
activate StatsCommandParser

create StatsCommand
StatsCommandParser -> StatsCommand
activate StatsCommand

ref over StatsCommandParser, StatsCommand : create StatsCommand with start date and end date

StatsCommand --> StatsCommandParser
deactivate StatsCommand



StatsCommandParser --> AddressBookParser
destroy StatsCommandParser

AddressBookParser --> LogicManager
deactivate AddressBookParser

LogicManager -> StatsCommand : execute()
activate StatsCommand




StatsCommand -> ModelManager:  getFilteredExpenseList()
activate ModelManager

ModelManager --> StatsCommand : statsExpenses
deactivate ModelManager


StatsCommand -> Statistics : startStatistic(statsExpenses)
activate Statistics

Statistics --> StatsCommand: statistics
deactivate Statistics

StatsCommand -> Statistics : calculateStats("stats", startDate, endDate, null)
activate Statistics

Statistics -> Statistics : basicStats(startDate, endDate)
Statistics -> Statistics : extractRelevantExpenses(startDate, endDate)
Statistics -> Statistics : generatePercentages()








Statistics --> StatsCommand : statsResult
deactivate Statistics






StatsCommand -> Statistics : getFormattedPercentages()
activate Statistics

Statistics --> StatsCommand : percentages
deactivate Statistics


StatsCommand -> Statistics : getFormattedCategories()
activate Statistics

Statistics --> StatsCommand : categories
deactivate Statistics

StatsCommand -> Statistics : getTitle()
activate Statistics

Statistics --> StatsCommand : title
deactivate Statistics


















create CommandResult

StatsCommand -> CommandResult : CommandResult(statsResult, false, false, true, false, \n PanelName.CURRENT, categories, percentages, title)
activate CommandResult

CommandResult --> StatsCommand
deactivate CommandResult

StatsCommand --> LogicManager
destroy StatsCommand

<-- LogicManager
deactivate LogicManager





@enduml
